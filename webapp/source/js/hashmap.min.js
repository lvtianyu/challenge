(function(factory){if(typeof define==='function'&&define.amd){define([],factory)}else if(typeof module==='object'){var HashMap=module.exports=factory();HashMap.HashMap=HashMap}else{this.HashMap=factory()}}(function(){function HashMap(other){this.clear();switch(arguments.length){case 0:break;case 1:this.copy(other);break;default:multi(this,arguments);break}}var proto=HashMap.prototype={constructor:HashMap,get:function(key){var data=this._data[this.hash(key)];return data&&data[1]},set:function(key,value){this._data[this.hash(key)]=[key,value]},multi:function(){multi(this,arguments)},copy:function(other){for(var key in other._data){this._data[key]=other._data[key]}},has:function(key){return this.hash(key)in this._data},search:function(value){for(var key in this._data){if(this._data[key][1]===value){return this._data[key][0]}}return null},remove:function(key){delete this._data[this.hash(key)]},type:function(key){var str=Object.prototype.toString.call(key);var type=str.slice(8,-1).toLowerCase();if(type==='domwindow'&&!key){return key+''}return type},keys:function(){var keys=[];this.forEach(function(value,key){keys.push(key)});return keys},values:function(){var values=[];this.forEach(function(value){values.push(value)});return values},count:function(){return this.keys().length},clear:function(){this._data={}},clone:function(){return new HashMap(this)},hash:function(key){switch(this.type(key)){case'undefined':case'null':case'boolean':case'number':case'regexp':return key+'';case'date':return'♣'+key.getTime();case'string':return'♠'+key;case'array':var hashes=[];for(var i=0;i<key.length;i++){hashes[i]=this.hash(key[i])}return'♥'+hashes.join('⁞');default:if(!key.hasOwnProperty('_hmuid_')){key._hmuid_=++HashMap.uid;hide(key,'_hmuid_')}return'♦'+key._hmuid_}},forEach:function(func,ctx){for(var key in this._data){var data=this._data[key];func.call(ctx||this,data[1],data[0])}}};HashMap.uid=0;for(var method in proto){if(method==='constructor'||!proto.hasOwnProperty(method)){continue}var fn=proto[method];if(fn.toString().indexOf('return ')===-1){proto[method]=chain(fn)}}function multi(map,args){for(var i=0;i<args.length;i+=2){map.set(args[i],args[i+1])}}function chain(fn){return function(){fn.apply(this,arguments);return this}}function hide(obj,prop){if(Object.defineProperty){Object.defineProperty(obj,prop,{enumerable:false})}}return HashMap}));
